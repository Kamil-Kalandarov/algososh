describe('Тест страницы Queue', () => {
    beforeEach(() => {
        cy.visit('http://localhost:3000/queue')
        cy.get('[data-testid="queueInputTest"]').as ('input')
        cy.get('[data-testid="queueTestAddBtn"]').as('addBtn')
        cy.get('[data-testid="queueTestDeleteBtn"]').as('deleteBtn')
        cy.get('[data-testid="queueTestClearBtn"]').as('clearBtn')
        cy.get('[data-testid="circleTest"]').as('circle').should('have.length', 7)
        cy.get('[data-testid="headTest"]').as('head')
        cy.get('[data-testid="tailTest"]').as('tail')
        cy.get('[data-testid="indexTest"]').as('index').should('have.length', 7)
    });
    it('Кнопка недоступна при пустом инпуте', () => {
        cy.get('input').should('be.empty')
        cy.get('@addBtn').should('be.disabled')
        cy.get('@deleteBtn').should('be.disabled')
        cy.get('@clearBtn').should('be.disabled')
    });
    it('Добавление элемента в очередь и анимация работает верно', () => {
        cy.clock()
        cy.get('@input').type('1')
        cy.get('@addBtn').should('be.enabled')
        cy.get('@addBtn').click()
        cy.get('@input').should('be.empty')
        cy.get('@circle')
        .eq(0)
        .should('have.css', 'border-color', 'rgb(210, 82, 225)')
        .contains('1')
        cy.get('@head').contains('head')
        cy.get('@tail').contains('tail')
        cy.tick(500)
        cy.get('@circle')
        .eq(0)
        .should('have.css', 'border-color', 'rgb(0, 50, 255)')
        cy.get('@addBtn').should('be.disabled')
        cy.get('@deleteBtn').should('be.enabled')
        cy.get('@clearBtn').should('be.enabled')

        cy.get('@input').type('2')
        cy.get('@addBtn').should('be.enabled')
        cy.get('@addBtn').click()
        cy.get('@input').should('be.empty')
        cy.get('@circle')
        .eq(1)
        .should('have.css', 'border-color', 'rgb(210, 82, 225)')
        .contains('2')
        cy.get('@head').eq(0).contains('head')
        cy.get('@tail').eq(1).contains('tail')
        cy.get('@tail').eq(0).should('be.empty')
        cy.tick(500)
        cy.get('@circle')
        .eq(1)
        .should('have.css', 'border-color', 'rgb(0, 50, 255)')
        cy.get('@addBtn').should('be.disabled')

        cy.get('@input').type('3')
        cy.get('@addBtn').should('be.enabled')
        cy.get('@addBtn').click()
        cy.get('@input').should('be.empty')
        cy.get('@circle')
        .eq(2)
        .should('have.css', 'border-color', 'rgb(210, 82, 225)')
        .contains('3')
        cy.get('@head').eq(0).contains('head')
        cy.get('@tail').eq(2).contains('tail')
        cy.get('@tail').eq(1).should('be.empty')
        cy.tick(500)
        cy.get('@circle').eq(2)
        .should('have.css', 'border-color', 'rgb(0, 50, 255)')
        cy.get('@addBtn').should('be.disabled')
    });
    it('Удаление элемента из очереди работает верно', () => {
        cy.clock()
        cy.get('@input').type('1')
        cy.get('@addBtn').should('be.enabled').click()
        cy.tick(500)
        cy.get('@input').type('2')
        cy.get('@addBtn').should('be.enabled').click()
        cy.tick(500)
        cy.get('@input').type('3')
        cy.get('@addBtn').should('be.enabled').click()
        cy.tick(500)
        cy.get('@addBtn').should('be.disabled')
        cy.get('@deleteBtn').should('be.enabled')
        cy.get('@clearBtn').should('be.enabled')

        cy.get('@deleteBtn').click()
        cy.get('@circle')
        .eq(0)
        .should('not.have.text')
        cy.get('@head').eq(0).should('be.empty')
        cy.get('@circle')
        .eq(1)
        .should('have.css', 'border-color', 'rgb(210, 82, 225)')
        cy.get('@head').eq(1).contains('head')
        cy.tick(500)
        cy.get('@circle')
        .eq(1)
        .should('have.css', 'border-color', 'rgb(0, 50, 255)')

        cy.get('@deleteBtn').click()
        cy.get('@circle')
        .eq(1)
        .should('not.have.text')
        cy.get('@head').eq(1).should('be.empty')
        cy.get('@circle')
        .eq(2)
        .should('have.css', 'border-color', 'rgb(210, 82, 225)')
        cy.get('@head').eq(2).contains('head')
        cy.tick(500)
        cy.get('@circle')
        .eq(2)
        .should('have.css', 'border-color', 'rgb(0, 50, 255)')

        cy.get('@deleteBtn').click()
        cy.get('@circle')
        .eq(2)
        .should('not.have.text')
        cy.get('@head').eq(2).should('be.empty')
        cy.get('@tail').eq(2).should('be.empty')
        cy.get('@deleteBtn').should('be.disabled')
        cy.get('@clearBtn').should('be.disabled')
    });
    it('Очистка очереди работает верно', () => {
        cy.clock()
        cy.get('@input').type('1')
        cy.get('@addBtn').should('be.enabled').click()
        cy.tick(500)
        cy.get('@input').type('2')
        cy.get('@addBtn').should('be.enabled').click()
        cy.tick(500)
        cy.get('@input').type('3')
        cy.get('@addBtn').should('be.enabled').click()
        cy.tick(500)
        cy.get('@addBtn').should('be.disabled')
        cy.get('@deleteBtn').should('be.enabled')
        cy.get('@clearBtn').should('be.enabled')

        cy.get('@clearBtn').click()
        cy.get('@circle')
        .should('have.length', 7)
        .should('have.css', 'border-color', 'rgb(0, 50, 255)')
        .should('not.have.text')
        cy.get('@head').should('be.empty')
        cy.get('@tail').should('be.empty')
        cy.get('@addBtn').should('be.disabled')
        cy.get('@deleteBtn').should('be.disabled')
        cy.get('@clearBtn').should('be.disabled')
    });
});